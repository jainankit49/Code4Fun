Add One To Number:

Given a non-negative number represented as an array of digits,

add 1 to the number ( increment the number represented by the digits ).

The digits are stored such that the most significant digit is at the head of the list.

Example:

If the vector has [1, 2, 3]

the returned vector should be [1, 2, 4]

as 123 + 1 = 124.

 NOTE: Certain things are intentionally left unclear in this question which you should practice asking the interviewer.
For example, for this problem, following are some good questions to ask :
Q : Can the input have 0’s before the most significant digit. Or in other words, is 0 1 2 3 a valid input?
A : For the purpose of this question, YES
Q : Can the output have 0’s before the most significant digit? Or in other words, is 0 1 2 4 a valid output?
A : For the purpose of this question, NO. Even if the input has zeroes before the most significant digit.


Solution:

public class Solution {
	public ArrayList<Integer> plusOne(ArrayList<Integer> a) {
	    ArrayList<Integer> finalList = new ArrayList<Integer>(a);
	    
	    int carry=1;
	    int digit=0;
	    int num=0;
	    for(int i=a.size()-1;i>=0;i--){
	        if(carry==0){
	            break;
	        }
	        digit = a.get(i);
	        num = digit+carry;
	        
	        if(num >= 10){
	             digit = num%10;
	             carry = num/10;
	        }
	        else{
	            digit=num;
	            carry=0;
	        }
	        finalList.set(i,digit);
	     }
	        if(carry!=0){
	            finalList.add(0,1);
	        }
       
        // removing leading zeros
        int index = 0;
        while (index < finalList.size() && finalList.get(index) == 0) {
            finalList.remove(index);
        }
	    return finalList;
	}
}
